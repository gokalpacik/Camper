// <auto-generated />
using System;
using GloboTicket.Services.EventCatalog.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Camper.Web.CampFinder.Migrations
{
    [DbContext(typeof(CampFinderDbContext))]
    [Migration("20201226110004_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Camper.Web.CampFinder.Entities.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("686697fd-b67e-42b5-bf75-52bbc27417a2"),
                            Name = "Private Camps"
                        },
                        new
                        {
                            CategoryId = new Guid("2b0be458-4d86-4db1-93e0-136da5c63f20"),
                            Name = "Naitonal Park Camps"
                        });
                });

            modelBuilder.Entity("GloboTicket.Services.EventCatalog.Entities.CampSite", b =>
                {
                    b.Property<Guid>("CampSiteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CampSiteId");

                    b.HasIndex("CategoryId");

                    b.ToTable("CampSites");

                    b.HasData(
                        new
                        {
                            CampSiteId = new Guid("5e532fe7-cbb1-49e4-bfc2-5878d57f3423"),
                            CategoryId = new Guid("686697fd-b67e-42b5-bf75-52bbc27417a2"),
                            CreateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "İstanbul'un Silivri ilçesinde bulunan bir kamp alanı",
                            ImageUrl = "https://blog.flypgs.com/wp-content/uploads/2018/05/istanbul-yakini-kamp-yapilacak-yerler.jpg",
                            Location = "İstanbul",
                            Name = "Semizkum Tabiat Parkı"
                        },
                        new
                        {
                            CampSiteId = new Guid("b09d7e41-38f6-4980-bef1-38908e3383bd"),
                            CategoryId = new Guid("2b0be458-4d86-4db1-93e0-136da5c63f20"),
                            CreateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Edirne'nin Keşan ilçesinde bulunan bir milli park ve tabiat parkı",
                            ImageUrl = "https://gokcetepetabiatparki.com/wp-content/uploads/2020/03/Zipline.jpg",
                            Location = "Edirne",
                            Name = "Gökçetepe Tabiat Parkı"
                        });
                });

            modelBuilder.Entity("GloboTicket.Services.EventCatalog.Entities.CampSite", b =>
                {
                    b.HasOne("Camper.Web.CampFinder.Entities.Category", "Category")
                        .WithMany("CampSites")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Camper.Web.CampFinder.Entities.Category", b =>
                {
                    b.Navigation("CampSites");
                });
#pragma warning restore 612, 618
        }
    }
}
